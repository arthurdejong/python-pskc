test_encryption.doctest - test various encryption schemes

Copyright (C) 2014 Arthur de Jong

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
02110-1301 USA


>>> from pskc import PSKC


>>> pskc = PSKC('tests/aes128-cbc.pskcxml')
>>> pskc.encryption.key = '12345678901234567890123456789012'.decode('hex')
>>> pskc.keys[0].secret
'12345678901234567890'
>>> pskc.mac.algorithm
'http://www.w3.org/2001/04/xmldsig-more#hmac-sha224'
>>> pskc.mac.key
'MacMacMacMacMacMacMa'


>>> pskc = PSKC('tests/aes192-cbc.pskcxml')
>>> pskc.encryption.key = '12345678901234567890123456789012'.decode('hex')
>>> pskc.keys[0].secret
Traceback (most recent call last):
    ...
DecryptionError: Invalid key length
>>> pskc.encryption.key = '123456789012345678901234567890123456789012345678'.decode('hex')
>>> pskc.keys[0].secret
'12345678901234567890'
>>> pskc.mac.algorithm
'http://www.w3.org/2001/04/xmldsig-more#hmac-sha256'
>>> pskc.mac.key
'MacMacMacMacMacMacMa'


>>> pskc = PSKC('tests/aes256-cbc.pskcxml')
>>> pskc.encryption.key = '1234567890123456789012345678901234567890123456789012345678901234'.decode('hex')
>>> pskc.keys[0].secret
'12345678901234567890'
>>> pskc.mac.algorithm
'http://www.w3.org/2001/04/xmldsig-more#hmac-sha384'
>>> pskc.mac.key
'MacMacMacMacMacMacMa'


>>> pskc = PSKC('tests/tripledes-cbc.pskcxml')
>>> pskc.encryption.key = '1234'.decode('hex')
>>> pskc.keys[0].secret
Traceback (most recent call last):
    ...
DecryptionError: Invalid key length
>>> pskc.encryption.key = '12345678901234567890123456789012'.decode('hex')
>>> pskc.keys[0].secret
'12345678901234567890'
>>> pskc.mac.algorithm
'http://www.w3.org/2001/04/xmldsig-more#hmac-sha512'
>>> pskc.mac.key
'MacMacMacMacMacMacMa'


>>> pskc = PSKC('tests/kw-aes128.pskcxml')
>>> pskc.encryption.key = '1234'.decode('hex')
>>> pskc.keys[0].secret
Traceback (most recent call last):
    ...
DecryptionError: Invalid key length
>>> pskc.encryption.key = '000102030405060708090a0b0c0d0e0f'.decode('hex')
>>> pskc.keys[0].secret.encode('hex')
'00112233445566778899aabbccddeeff'


>>> pskc = PSKC('tests/kw-aes192.pskcxml')
>>> pskc.encryption.key = '000102030405060708090a0b0c0d0e0f'.decode('hex')
>>> pskc.keys[0].secret
Traceback (most recent call last):
    ...
DecryptionError: Invalid key length
>>> pskc.encryption.key = '000102030405060708090a0b0c0d0e0f1011121314151617'.decode('hex')
>>> pskc.keys[0].secret.encode('hex')
'00112233445566778899aabbccddeeff'


>>> pskc = PSKC('tests/kw-aes256.pskcxml')
>>> pskc.encryption.key = '000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f'.decode('hex')
>>> pskc.keys[0].secret.encode('hex')
'00112233445566778899aabbccddeeff0001020304050607'


>>> pskc = PSKC('tests/kw-tripledes.pskcxml')
>>> pskc.encryption.key = '255e0d1c07b646dfb3134cc843ba8aa71f'.decode('hex')
>>> pskc.keys[0].secret
Traceback (most recent call last):
    ...
DecryptionError: Invalid key length
>>> pskc.encryption.key = '255e0d1c07b646dfb3134cc843ba8aa71f025b7c0838251f'.decode('hex')
>>> pskc.keys[0].secret.encode('hex')
'2923bf85e06dd6ae529149f1f1bae9eab3a7da3d860d3e98'
